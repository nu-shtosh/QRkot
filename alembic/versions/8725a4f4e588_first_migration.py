"""First migration

Revision ID: 8725a4f4e588
Revises:
Create Date: 2022-05-28 17:41:33.942367

"""
import fastapi_users_db_sqlalchemy
import sqlalchemy as sa

from alembic import op

# revision identifiers, used by Alembic.
revision = '8725a4f4e588'
down_revision = None
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table(
        'charityproject',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('full_amount', sa.Integer(), nullable=False),
        sa.Column('invested_amount', sa.Integer(), nullable=False),
        sa.Column('fully_invested', sa.Boolean(), nullable=False),
        sa.Column('create_date', sa.DateTime(), nullable=False),
        sa.Column('close_date', sa.DateTime(), nullable=True),
        sa.Column('name', sa.String(length=100), nullable=False),
        sa.Column('description', sa.Text(), nullable=False),
        sa.CheckConstraint(
            'full_amount > 0',
            name='сумма пожертвования должна быть больше 0'
        ),
        sa.CheckConstraint(
            'invested_amount <= full_amount',
            name=('сумма из пожертвования должна быть меньше'
                  ' или равна сумме пожертвования')
        ),
        sa.CheckConstraint(
            'invested_amount >= 0',
            name='сумма из пожертвования больше 0'
        ),
        sa.CheckConstraint(
            'length(name) BETWEEN 1 AND 100',
            name='допустимая длина строки — от 1 до 100 символов включительно'
        ),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table(
        'user',
        sa.Column(
            'id', fastapi_users_db_sqlalchemy.guid.GUID(), nullable=False
        ),
        sa.Column('email', sa.String(length=320), nullable=False),
        sa.Column(
            'hashed_password', sa.String(length=1024), nullable=False),
        sa.Column('is_active', sa.Boolean(), nullable=False),
        sa.Column('is_superuser', sa.Boolean(), nullable=False),
        sa.Column('is_verified', sa.Boolean(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_index(op.f('ix_user_email'), 'user', ['email'], unique=True)
    op.create_table(
        'donation',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('full_amount', sa.Integer(), nullable=False),
        sa.Column('invested_amount', sa.Integer(), nullable=False),
        sa.Column('fully_invested', sa.Boolean(), nullable=False),
        sa.Column('create_date', sa.DateTime(), nullable=False),
        sa.Column('close_date', sa.DateTime(), nullable=True),
        sa.Column(
            'user_id',
            fastapi_users_db_sqlalchemy.guid.GUID(),
            nullable=True
        ),
        sa.Column('comment', sa.Text(), nullable=True),
        sa.CheckConstraint(
            'full_amount > 0',
            name='сумма пожертвования должна быть больше 0'
        ),
        sa.CheckConstraint(
            'invested_amount <= full_amount',
            name=('сумма из пожертвования должна '
                  'быть меньше или равна сумме пожертвования')
        ),
        sa.CheckConstraint(
            'invested_amount >= 0', name='сумма из пожертвования больше 0'
        ),
        sa.ForeignKeyConstraint(['user_id'], ['user.id'], ),
        sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('donation')
    op.drop_index(op.f('ix_user_email'), table_name='user')
    op.drop_table('user')
    op.drop_table('charityproject')
    # ### end Alembic commands ###
